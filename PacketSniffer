from scapy.all import sniff
from scapy.layers.inet import IP, TCP, UDP

def packet_callback(packet):
    if IP in packet:
        ip_src = packet[IP].src
        ip_dst = packet[IP].dst
        proto = packet[IP].proto
        if TCP in packet:
            pckt_src = packet[TCP].sport
            pckt_dst = packet[TCP].dport
            print(f"TCP Packet: {ip_src}:{pckt_src} -> {ip_dst}:{pckt_dst}")
        elif UDP in packet:
            pckt_src = packet[UDP].sport
            pckt_dst = packet[UDP].dport
            print(f"UDP Packet: {ip_src}:{pckt_src} -> {ip_dst}:{pckt_dst}")
        else:
            print(f"Non-TCP/UDP Packet: {ip_src} -> {ip_dst}, Protocol: {proto}")

def main():
    print("Starting packet sniffing...")
    sniff(prn=packet_callback, store=False)

if __name__ == "__main__":
    main()
